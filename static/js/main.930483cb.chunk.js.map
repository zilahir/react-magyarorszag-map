{"version":3,"sources":["styles/main.module.scss","../../src/index.js","../../src/utils/fetchJson.js","components/common/Loader/index.js","App.js","index.js"],"names":["module","exports","MapOfHungary","props","containerClassName","onClick","selected","stroke","scale","geoUrl","useState","rawData","setRawData","console","useEffect","fetch","response","fetchedRaw","className","styles","projectionConfig","rotate","center","projection","geography","fill","key","geo","strokeWidth","selectCounty","PropTypes","number","Loader","Documentation","lazy","App","active","setActive","mainContainer","index","includes","filtered","filter","i","handleClick","activeFill","JSON","stringify","map","curr","huMapData","objects","geometries","properties","docContainer","fallback","ReactDOM","render","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,aAAe,2BAA2B,QAAU,wB,k9gXCMrGC,EAAe,SAACC,GAAU,IAC7BC,EAAyDD,EAD5B,mBACTE,EAAqCF,EAD5B,QACAG,EAA4BH,EAD5B,SACUI,EAAkBJ,EAD5B,OACkBK,EAAUL,EAD5B,MAE/BM,EAAN,4FAFqC,EAIPC,mBAJO,MAI9BC,EAJ8B,KAIrBC,EAJqB,KAYrC,cACEC,sBAAuBF,gCAAvBE,YACA,GACER,KAIJ,OAdAS,qBAAU,WCXHC,MDYL,GCZK,MACC,mBAAcC,EAAd,UADD,MAEC,YACJ,YAHG,OAKE,YACLH,oBDOFI,MAAgB,YACdJ,uBACAD,UAJJE,IAeE,yBAAKI,UAAS,IAAKd,GAAsBe,IACvC,mCACEC,iBAAkB,CAChBZ,MADgB,EAEhBa,OAAQ,KAFQ,GAGhBC,OAAQ,iBAEVC,WAAW,aAEX,iCAAaC,UAAWf,IACrB,iCACC,KAAgB,qBACd,+BACEgB,KAAMnB,qBADR,OAEEoB,IAAKC,EAFP,OAGEH,UAHF,EAIEI,YAJF,EAKErB,OAAQD,qBALV,OAMED,QAAS,kBAAMwB,EAAN,eAUzB3B,eAA4B,CAC1BE,mBAD0B,KAE1BC,QAF0B,KAG1BC,SAH0B,GAI1BE,MAJ0B,IAK1BD,OAAQ,IAGVL,YAAyB,CACvBE,mBAAoB0B,IADG,OAEvBzB,QAASyB,SAFc,WAGvBxB,SAAUwB,YAAkBA,IAHL,KAIvBtB,MAAOsB,WAJgB,WAKvBvB,OAAQuB,IAAUC,Q,4CElDLC,EAVA,SAAC7B,GACd,OACE,6BACE,kBAAC,IAAD,Q,QCDA8B,EAAgBC,gBAAK,kDAgDZC,EA9CH,WAAO,IAAD,EACYzB,mBAAS,IADrB,mBACT0B,EADS,KACDC,EADC,KAUhB,OACE,yBAAKnB,UAAWC,IAAOmB,eACrB,6BACE,kBAAC,EAAD,CACEjC,QAAS,SAAAC,GAAQ,OAZzB,SAAqBiC,GACnB,GAAKH,EAAOI,SAASD,GAEd,CACL,IAAME,EAAWL,EAAOM,QAAO,SAACC,GAAD,OAAOA,IAAMJ,KAC5CF,EAAUI,QAHVJ,EAAU,GAAD,mBAAKD,GAAL,CAAaG,KAUGK,CAAYtC,IACjCA,SAAU8B,EACVS,WAAW,YAEb,yBAAK3B,UAAWC,IAAON,SACrB,2BACGiC,KAAKC,UAAUX,KAGpB,yBAAKlB,UAAWC,IAAON,SACrB,4BAEIuB,EAAOY,KAAI,SAAAC,GAAI,OACb,4BAEIH,KAAKC,UAAUG,EAAUC,QAAQxC,QAAQyC,WAAWH,GAAMI,mBAQxE,yBAAKnC,UAAWC,IAAOmC,cACrB,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OAClB,kBAACtB,EAAD,UC7CVuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.930483cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"main_mainContainer__xLwwn\",\"docContainer\":\"main_docContainer__1gz4v\",\"console\":\"main_console__1A1Vf\"};","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './styles.module.scss'\nimport { getJson } from './utils/fetchJson'\n\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps'\n\nexport const MapOfHungary = (props) => {\n  const { containerClassName, onClick, selected, stroke, scale } = props\n  const geoUrl =\n    'https://raw.githubusercontent.com/zilahir/react-magyarorszag-map/master/src/utils/hu.json'\n  const [rawData, setRawData] = useState(null)\n  useEffect(() => {\n    const fetchedRaw = getJson(geoUrl)\n    fetchedRaw.then((res) => {\n      console.debug('res', res)\n      setRawData(res)\n    })\n  }, [])\n  function selectCounty(index) {\n    console.debug('index', rawData.objects.rawData.geometries[index].properties)\n    if (onClick) {\n      onClick(index)\n    }\n  }\n\n  return (\n    <div className={`${containerClassName || styles.rootContainer}`}>\n      <ComposableMap\n        projectionConfig={{\n          scale,\n          rotate: [-30, 0],\n          center: [-10.5, 47.7612]\n        }}\n        projection='geoAlbers'\n      >\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo, index) => (\n              <Geography\n                fill={selected.includes(index) ? '#000' : '#fff'}\n                key={geo.rsmKey}\n                geography={geo}\n                strokeWidth={stroke}\n                stroke={selected.includes(index) ? '#fff' : '#000'}\n                onClick={() => selectCounty(index)}\n              />\n            ))\n          }\n        </Geographies>\n      </ComposableMap>\n    </div>\n  )\n}\n\nMapOfHungary.defaultProps = {\n  containerClassName: null,\n  onClick: null,\n  selected: [],\n  scale: 6000,\n  stroke: 0.5\n}\n\nMapOfHungary.propTypes = {\n  containerClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.arrayOf(PropTypes.any),\n  scale: PropTypes.number.isRequired,\n  stroke: PropTypes.number\n}\n","export const getJson = (url) => {\n  return fetch(url)\n    .then((response) => response.json())\n    .then((responseJson) => {\n      return responseJson\n    })\n    .catch((error) => {\n      console.error(error)\n    })\n}\n","import React from 'react'\nimport BarLoader from 'react-spinners/BarLoader'\n\n/**\n* @author zilahir\n* @function Loader\n**/\n\nconst Loader = (props) => {\n  return(\n    <div>\n      <BarLoader\n      />\n    </div>\n   )\n\n }\n\nexport default Loader","import React, { useState, Suspense, lazy } from 'react'\nimport { importMDX } from 'mdx.macro'\n\nimport { MapOfHungary } from 'react-magyarorszag-map'\nimport 'react-magyarorszag-map/dist/index.css'\nimport styles from './styles/main.module.scss'\nimport Loader from './components/common/Loader'\n\nimport huMapData from 'react-magyarorszag-map/src/utils/hu.json'\n\nconst Documentation = lazy(() => importMDX('../docs/doc.mdx'))\n\nconst App = () => {\n  const [active, setActive] = useState([])\n  function handleClick(index) {\n    if (!active.includes(index)) {\n      setActive([...active, index])\n    } else {\n      const filtered = active.filter((i) => i !== index)\n      setActive(filtered)\n    }\n  }\n  return (\n    <div className={styles.mainContainer}>\n      <div>\n        <MapOfHungary\n          onClick={selected => handleClick(selected)}\n          selected={active}\n          activeFill=\"#ff0000\"\n        />\n        <div className={styles.console}>\n          <p>\n            {JSON.stringify(active)}\n          </p>\n        </div>\n        <div className={styles.console}>\n          <ul>\n            {\n              active.map(curr => (\n                <li>\n                  {\n                    JSON.stringify(huMapData.objects.rawData.geometries[curr].properties)\n                  }\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n      <div className={styles.docContainer}>\n        <Suspense fallback={<Loader />}>\n          <Documentation />\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}